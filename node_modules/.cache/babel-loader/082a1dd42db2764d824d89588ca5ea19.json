{"ast":null,"code":"import { createReducer } from \"typesafe-actions\";\nconst actions = {\n  addTodo,\n  toggleTodo,\n  removeTodo\n};\nconst initialState = [];\nconst todos = createReducer(initialState, {\n  [ADD_TODO]: (state, action) => state.concat({ ...action.payload,\n    done: false\n  }),\n  [TOGGLE_TODO]: (state, action) => state.map(todo => todo.id === action.payload ? { ...todo,\n    done: !todo.done\n  } : todo),\n  [REMOVE_TODO]: (state, action) => state.filter(todo => todo.id !== action.payload)\n}); // function todos(\n//   state: TodoState = initialState,\n//   action: TodosAction\n// ): TodoState {\n//   switch (action.type) {\n//     case ADD_TODO:\n//       return state.concat({\n//         id: action.payload.id,\n//         text: action.payload.text,\n//         done: false,\n//       });\n//     case TOGGLE_TODO:\n//       return state.map((todo) =>\n//         todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n//       );\n//     case REMOVE_TODO:\n//       return state.filter((todo) => todo.id !== action.payload);\n//     default:\n//       return state;\n//   }\n// }\n\nexport default todos;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/todos/index.ts"],"names":["createReducer","actions","addTodo","toggleTodo","removeTodo","initialState","todos","ADD_TODO","state","action","concat","payload","done","TOGGLE_TODO","map","todo","id","REMOVE_TODO","filter"],"mappings":"AAAA,SAAmCA,aAAnC,QAAwD,kBAAxD;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OADc;AAEdC,EAAAA,UAFc;AAGdC,EAAAA;AAHc,CAAhB;AAeA,MAAMC,YAAuB,GAAG,EAAhC;AAEA,MAAMC,KAAK,GAAGN,aAAa,CAAyBK,YAAzB,EAAuC;AAChE,GAACE,QAAD,GAAY,CAACC,KAAD,EAAQC,MAAR,KACVD,KAAK,CAACE,MAAN,CAAa,EACX,GAAGD,MAAM,CAACE,OADC;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAb,CAF8D;AAMhE,GAACC,WAAD,GAAe,CAACL,KAAD,EAAQC,MAAR,KACbD,KAAK,CAACM,GAAN,CAAWC,IAAD,IACRA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAnB,GAA6B,EAAE,GAAGI,IAAL;AAAWH,IAAAA,IAAI,EAAE,CAACG,IAAI,CAACH;AAAvB,GAA7B,GAA6DG,IAD/D,CAP8D;AAUhE,GAACE,WAAD,GAAe,CAACT,KAAD,EAAQC,MAAR,KACbD,KAAK,CAACU,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAA1C;AAX8D,CAAvC,CAA3B,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,KAAf","sourcesContent":["import { ActionType, createAction, createReducer } from \"typesafe-actions\";\n\nconst actions = {\n  addTodo,\n  toggleTodo,\n  removeTodo,\n};\ntype TodosAction = ActionType<typeof actions>;\n\nexport type Todo = {\n  id: number;\n  text: string;\n  done: boolean;\n};\n\ntype TodoState = Todo[];\n\nconst initialState: TodoState = [];\n\nconst todos = createReducer<TodoState, TodosAction>(initialState, {\n  [ADD_TODO]: (state, action) =>\n    state.concat({\n      ...action.payload,\n      done: false,\n    }),\n  [TOGGLE_TODO]: (state, action) =>\n    state.map((todo) =>\n      todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n    ),\n  [REMOVE_TODO]: (state, action) =>\n    state.filter((todo) => todo.id !== action.payload),\n});\n\n// function todos(\n//   state: TodoState = initialState,\n//   action: TodosAction\n// ): TodoState {\n//   switch (action.type) {\n//     case ADD_TODO:\n//       return state.concat({\n//         id: action.payload.id,\n//         text: action.payload.text,\n//         done: false,\n//       });\n//     case TOGGLE_TODO:\n//       return state.map((todo) =>\n//         todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n//       );\n//     case REMOVE_TODO:\n//       return state.filter((todo) => todo.id !== action.payload);\n//     default:\n//       return state;\n//   }\n// }\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}