{"ast":null,"code":"!function (n, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t((n = n || self).TypesafeActions = {});\n}(this, function (n) {\n  \"use strict\";\n\n  function t(n, t) {\n    return void 0 === t && (t = 1), null == n;\n  }\n\n  function r(n) {\n    throw void 0 === n && (n = 1), new Error(\"Argument \" + n + \" is empty.\");\n  }\n\n  function e(n) {\n    return \"function\" == typeof n && \"getType\" in n;\n  }\n\n  function i(n) {\n    throw void 0 === n && (n = 1), new Error(\"Argument \" + n + ' is invalid, it should be an action-creator instance from \"typesafe-actions\"');\n  }\n\n  function o(n, t) {\n    if (null == n) throw new Error(\"Argument contains array with empty element at index \" + t);\n    if (null == n.getType) throw new Error(\"Argument contains array with invalid element at index \" + t + ', it should be an action-creator instance from \"typesafe-actions\"');\n  }\n\n  function u(n) {\n    return \"string\" == typeof n || \"symbol\" == typeof n;\n  }\n\n  function c(n) {\n    return !u(n);\n  }\n\n  function a(n) {\n    throw void 0 === n && (n = 1), new Error(\"Argument \" + n + \" is invalid, it should be an action type of type: string | symbol\");\n  }\n\n  function f(n, t) {\n    if (null == n) throw new Error(\"Argument contains array with empty element at index \" + t);\n    if (\"string\" != typeof n && \"symbol\" != typeof n) throw new Error(\"Argument contains array with invalid element at index \" + t + \", it should be of type: string | symbol\");\n  }\n\n  function s(n, e, o, u) {\n    return t(n) && r(1), c(n) && i(1), {\n      type: n,\n      payload: e,\n      meta: o,\n      error: u\n    };\n  }\n\n  function y(n, e) {\n    t(n) && r(1), c(n) && a(1);\n    var i = null != e ? e(n) : function () {\n      return {\n        type: n\n      };\n    };\n    return Object.assign(i, {\n      getType: function () {\n        return n;\n      },\n      toString: function () {\n        return n;\n      }\n    });\n  }\n\n  function p(n) {\n    return t(n) && r(1), c(n) && a(1), Object.assign(function () {\n      return y(n, function (n) {\n        return function (t, r) {\n          return {\n            type: n,\n            payload: t,\n            meta: r\n          };\n        };\n      });\n    }, {\n      map: function (t) {\n        return y(n, function (n) {\n          return function (r, e) {\n            return Object.assign(t(r, e), {\n              type: n\n            });\n          };\n        });\n      }\n    });\n  }\n\n  function l(n) {\n    return t(n) && r(1), e(n) || i(1), n.getType();\n  }\n\n  n.action = s, n.createAction = function (n, t) {\n    var r = null == t ? function () {\n      return s(n);\n    } : t(s.bind(null, n));\n    return Object.assign(r, {\n      getType: function () {\n        return n;\n      },\n      toString: function () {\n        return n;\n      }\n    });\n  }, n.createActionDeprecated = function (n, t) {\n    var r;\n\n    if (null != t) {\n      if (\"function\" != typeof t) throw new Error(\"second argument is not a function\");\n      r = t;\n    } else r = function () {\n      return {\n        type: n\n      };\n    };\n\n    if (null == n) throw new Error(\"first argument is missing\");\n    if (\"string\" != typeof n && \"symbol\" != typeof n) throw new Error(\"first argument should be type of: string | symbol\");\n    return r;\n  }, n.createAsyncAction = function (n, t, r, e) {\n    return [n, t, r].forEach(f), Object.assign(function () {\n      return {\n        request: p(n)(),\n        success: p(t)(),\n        failure: p(r)(),\n        cancel: e && p(e)()\n      };\n    }, {});\n  }, n.createCustomAction = y, n.createReducer = function n(t, r) {\n    void 0 === r && (r = {});\n    var i = Object.assign({}, r);\n    return Object.assign(function (n, r) {\n      if (void 0 === n && (n = t), i.hasOwnProperty(r.type)) {\n        var e = i[r.type];\n        if (\"function\" != typeof e) throw Error('Reducer under \"' + r.type + '\" key is not a valid reducer');\n        return e(n, r);\n      }\n\n      return n;\n    }, {\n      handlers: Object.assign({}, i),\n      handleAction: function (r, o) {\n        var c = Array.isArray(r) ? r : [r],\n            a = {};\n        return c.map(function (n) {\n          return e(n) ? l(n) : u(n) ? n : function (n) {\n            throw void 0 === n && (n = 1), new Error(\"Argument \" + n + ' is invalid, it should be an action-creator instance from \"typesafe-actions\" or action type of type: string | symbol');\n          }();\n        }).forEach(function (n) {\n          return a[n] = o;\n        }), n(t, Object.assign({}, i, a));\n      }\n    });\n  }, n.createStandardAction = p, n.getType = l, n.isActionOf = function (n, e) {\n    t(n) && r(1);\n    var i = Array.isArray(n) ? n : [n];\n    i.forEach(o);\n\n    var u = function (n) {\n      return i.some(function (t) {\n        return n.type === t.getType();\n      });\n    };\n\n    return void 0 === e ? u : u(e);\n  }, n.isOfType = function (n, e) {\n    t(n) && r(1);\n    var i = Array.isArray(n) ? n : [n];\n    i.forEach(f);\n\n    var o = function (n) {\n      return i.includes(n.type);\n    };\n\n    return void 0 === e ? o : o(e);\n  };\n});","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/node_modules/typesafe-actions/src/utils/validation.ts","/Users/hongseong-gyu/ts-react-redux-tutorial/node_modules/typesafe-actions/src/create-custom-action.ts"],"names":["throwIsEmpty","checkInvalidActionCreatorInArray","createCustomAction"],"mappings":"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","sourcesContent":["import { ActionCreator, TypeMeta, TypeConstant } from '../type-helpers';\n\nexport function checkIsEmpty(arg: unknown, argPosition: number = 1) {\n  return arg == null;\n}\n\nexport function throwIsEmpty(argPosition: number = 1): never {\n  throw new Error(`Argument ${argPosition} is empty.`);\n}\n\nexport function checkValidActionCreator(\n  arg: unknown\n): arg is ActionCreator<TypeConstant> {\n  return typeof arg === 'function' && 'getType' in arg;\n}\n\nexport function checkInvalidActionCreator(arg: unknown) {\n  return !checkValidActionCreator(arg);\n}\n\nexport function throwInvalidActionCreator(argPosition: number = 1): never {\n  throw new Error(\n    `Argument ${argPosition} is invalid, it should be an action-creator instance from \"typesafe-actions\"`\n  );\n}\n\nexport function checkInvalidActionCreatorInArray(\n  arg: ActionCreator<TypeConstant> & TypeMeta<TypeConstant>,\n  idx: number\n): void | never {\n  if (arg == null) {\n    throw new Error(\n      `Argument contains array with empty element at index ${idx}`\n    );\n  } else if (arg.getType == null) {\n    throw new Error(\n      // tslint:disable-next-line:max-line-length\n      `Argument contains array with invalid element at index ${idx}, it should be an action-creator instance from \"typesafe-actions\"`\n    );\n  }\n}\n\nexport function checkValidActionType(arg: unknown): arg is string | symbol {\n  return typeof arg === 'string' || typeof arg === 'symbol';\n}\n\nexport function checkInvalidActionType(arg: unknown): arg is string | symbol {\n  return !checkValidActionType(arg);\n}\n\nexport function throwInvalidActionType(argPosition: number = 1): never {\n  throw new Error(\n    `Argument ${argPosition} is invalid, it should be an action type of type: string | symbol`\n  );\n}\n\nexport function checkInvalidActionTypeInArray(\n  arg: TypeConstant,\n  idx: number\n): void | never {\n  if (arg == null) {\n    throw new Error(\n      `Argument contains array with empty element at index ${idx}`\n    );\n  } else if (typeof arg !== 'string' && typeof arg !== 'symbol') {\n    throw new Error(\n      `Argument contains array with invalid element at index ${idx}, it should be of type: string | symbol`\n    );\n  }\n}\n\nexport function throwInvalidActionTypeOrActionCreator(\n  argPosition: number = 1\n): never {\n  throw new Error(\n    `Argument ${argPosition} is invalid, it should be an action-creator instance from \"typesafe-actions\" or action type of type: string | symbol`\n  );\n}\n","import { ActionCreator, TypeConstant } from './type-helpers';\nimport {\n  checkIsEmpty,\n  throwIsEmpty,\n  checkInvalidActionType,\n  throwInvalidActionType,\n} from './utils/validation';\n\n/**\n * @description create custom action-creator using constructor function with injected type argument\n */\nexport function createCustomAction<\n  T extends TypeConstant,\n  AC extends ActionCreator<T> = () => { type: T }\n>(type: T, createHandler?: (type: T) => AC): AC {\n  if (checkIsEmpty(type)) {\n    throwIsEmpty(1);\n  }\n\n  if (checkInvalidActionType(type)) {\n    throwInvalidActionType(1);\n  }\n\n  const actionCreator: AC =\n    createHandler != null ? createHandler(type) : ((() => ({ type })) as AC);\n\n  return Object.assign(actionCreator, {\n    getType: () => type,\n    // redux-actions compatibility\n    toString: () => type,\n  });\n}\n"]},"metadata":{},"sourceType":"script"}