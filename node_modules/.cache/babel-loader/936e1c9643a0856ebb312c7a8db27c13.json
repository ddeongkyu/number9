{"ast":null,"code":"import { createReducer, createStandardAction } from \"typesafe-actions\";\nexport const increase = createStandardAction(\"counter/INCREASE\")();\nexport const decrease = createStandardAction(\"counter/DECREASE\")();\nexport const increaseBy = createStandardAction(\"counter/INCREASE_BY\")();\nconst initialState = {\n  count: 0\n};\nconst counter = createReducer(initialState).handleAction(increase, state => ({\n  count: state.count + 1\n})).handleAction(decrease, state => ({\n  count: state.count - 1\n})).handleAction(increaseBy, (state, action) => ({\n  count: state.count + action.payload\n}));\nexport default counter;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/counter.ts"],"names":["createReducer","createStandardAction","increase","decrease","increaseBy","initialState","count","counter","handleAction","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,oBAAxB,QAAoD,kBAApD;AAEA,OAAO,MAAMC,QAAQ,GAAGD,oBAAoB,CAAC,kBAAD,CAApB,EAAjB;AACP,OAAO,MAAME,QAAQ,GAAGF,oBAAoB,CAAC,kBAAD,CAApB,EAAjB;AACP,OAAO,MAAMG,UAAU,GAAGH,oBAAoB,CAAC,qBAAD,CAApB,EAAnB;AAMP,MAAMI,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE;AAD0B,CAAnC;AAIA,MAAMC,OAAO,GAAGP,aAAa,CAAeK,YAAf,CAAb,CACbG,YADa,CACAN,QADA,EACWO,KAAD,KAAY;AAAEH,EAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAvB,CAAZ,CADV,EAEbE,YAFa,CAEAL,QAFA,EAEWM,KAAD,KAAY;AAAEH,EAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAvB,CAAZ,CAFV,EAGbE,YAHa,CAGAJ,UAHA,EAGY,CAACK,KAAD,EAAQC,MAAR,MAAoB;AAC5CJ,EAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC;AADgB,CAApB,CAHZ,CAAhB;AAOA,eAAeJ,OAAf","sourcesContent":["import { createReducer, createStandardAction } from \"typesafe-actions\";\n\nexport const increase = createStandardAction(\"counter/INCREASE\")();\nexport const decrease = createStandardAction(\"counter/DECREASE\")();\nexport const increaseBy = createStandardAction(\"counter/INCREASE_BY\")<number>();\n\ntype CounterState = {\n  count: number;\n};\n\nconst initialState: CounterState = {\n  count: 0,\n};\n\nconst counter = createReducer<CounterState>(initialState)\n  .handleAction(increase, (state) => ({ count: state.count + 1 }))\n  .handleAction(decrease, (state) => ({ count: state.count - 1 }))\n  .handleAction(increaseBy, (state, action) => ({\n    count: state.count + action.payload,\n  }));\n\nexport default counter;\n"]},"metadata":{},"sourceType":"module"}