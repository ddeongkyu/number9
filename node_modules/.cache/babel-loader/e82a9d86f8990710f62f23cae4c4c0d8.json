{"ast":null,"code":"import { createAction } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\";\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\nlet nextId = 1;\nexport const addTodo = createAction(ADD_TODO, action => text => action({\n  id: nextId++,\n  text\n}));\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: id\n});\nexport const removeTodo = id => ({\n  type: REMOVE_TODO,\n  payload: id\n});\nconst initialState = [];\n\nfunction todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat({\n        id: action.payload.id,\n        text: action.payload.text,\n        done: false\n      });\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case REMOVE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/todos.ts"],"names":["createAction","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","nextId","addTodo","action","text","id","toggleTodo","type","payload","removeTodo","initialState","todos","state","concat","done","map","todo","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,mBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,OAAO,MAAMC,OAAO,GAAGL,YAAY,CACjCC,QADiC,EAEhCK,MAAD,IAAaC,IAAD,IACVD,MAAM,CAAC;AACLE,EAAAA,EAAE,EAAEJ,MAAM,EADL;AAELG,EAAAA;AAFK,CAAD,CAHyB,CAA5B;AASP,OAAO,MAAME,UAAU,GAAID,EAAD,KAAiB;AACzCE,EAAAA,IAAI,EAAER,WADmC;AAEzCS,EAAAA,OAAO,EAAEH;AAFgC,CAAjB,CAAnB;AAKP,OAAO,MAAMI,UAAU,GAAIJ,EAAD,KAAiB;AACzCE,EAAAA,IAAI,EAAEP,WADmC;AAEzCQ,EAAAA,OAAO,EAAEH;AAFgC,CAAjB,CAAnB;AAkBP,MAAMK,YAAuB,GAAG,EAAhC;;AAEA,SAASC,KAAT,GAGa;AAAA,MAFXC,KAEW,uEAFQF,YAER;AAAA,MADXP,MACW;;AACX,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKT,QAAL;AACE,aAAOc,KAAK,CAACC,MAAN,CAAa;AAClBR,QAAAA,EAAE,EAAEF,MAAM,CAACK,OAAP,CAAeH,EADD;AAElBD,QAAAA,IAAI,EAAED,MAAM,CAACK,OAAP,CAAeJ,IAFH;AAGlBU,QAAAA,IAAI,EAAE;AAHY,OAAb,CAAP;;AAKF,SAAKf,WAAL;AACE,aAAOa,KAAK,CAACG,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACX,EAAL,KAAYF,MAAM,CAACK,OAAnB,GAA6B,EAAE,GAAGQ,IAAL;AAAWF,QAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AAAvB,OAA7B,GAA6DE,IADxD,CAAP;;AAGF,SAAKhB,WAAL;AACE,aAAOY,KAAK,CAACK,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYF,MAAM,CAACK,OAA1C,CAAP;;AACF;AACE,aAAOI,KAAP;AAdJ;AAgBD;;AAED,eAAeD,KAAf","sourcesContent":["import { createAction } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\";\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\n\nlet nextId = 1;\n\nexport const addTodo = createAction(\n  ADD_TODO,\n  (action) => (text: string) =>\n    action({\n      id: nextId++,\n      text,\n    })\n);\n\nexport const toggleTodo = (id: number) => ({\n  type: TOGGLE_TODO,\n  payload: id,\n});\n\nexport const removeTodo = (id: number) => ({\n  type: REMOVE_TODO,\n  payload: id,\n});\n\ntype TodosAction =\n  | ReturnType<typeof addTodo>\n  | ReturnType<typeof toggleTodo>\n  | ReturnType<typeof removeTodo>;\n\nexport type Todo = {\n  id: number;\n  text: string;\n  done: boolean;\n};\n\ntype TodoState = Todo[];\n\nconst initialState: TodoState = [];\n\nfunction todos(\n  state: TodoState = initialState,\n  action: TodosAction\n): TodoState {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat({\n        id: action.payload.id,\n        text: action.payload.text,\n        done: false,\n      });\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n      );\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.payload);\n    default:\n      return state;\n  }\n}\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}