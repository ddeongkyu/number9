{"ast":null,"code":"import { createAction, createReducer } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\";\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\nlet nextId = 1;\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  payload: {\n    id: nextId++,\n    text\n  }\n});\nexport const toggleTodo = createAction(TOGGLE_TODO)();\nexport const removeTodo = createAction(REMOVE_TODO)();\nconst actions = {\n  addTodo,\n  toggleTodo,\n  removeTodo\n};\nconst initialState = [];\nconst todos = createReducer(initialState, {\n  [ADD_TODO]: (state, action) => state.concat({ ...action.payload,\n    done: false\n  }),\n  [TOGGLE_TODO]: (state, action) => state.map(todo => todo.id === action.payload ? { ...todo,\n    done: !todo.done\n  } : todo),\n  [REMOVE_TODO]: (state, action) => state.filter(todo => todo.id !== action.payload)\n}); // function todos(\n//   state: TodoState = initialState,\n//   action: TodosAction\n// ): TodoState {\n//   switch (action.type) {\n//     case ADD_TODO:\n//       return state.concat({\n//         id: action.payload.id,\n//         text: action.payload.text,\n//         done: false,\n//       });\n//     case TOGGLE_TODO:\n//       return state.map((todo) =>\n//         todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n//       );\n//     case REMOVE_TODO:\n//       return state.filter((todo) => todo.id !== action.payload);\n//     default:\n//       return state;\n//   }\n// }\n\nexport default todos;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/todos.ts"],"names":["createAction","createReducer","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","nextId","addTodo","text","type","payload","id","toggleTodo","removeTodo","actions","initialState","todos","state","action","concat","done","map","todo","filter"],"mappings":"AAAA,SAAqBA,YAArB,EAAmCC,aAAnC,QAAwD,kBAAxD;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,mBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAmB;AACxCC,EAAAA,IAAI,EAAEN,QADkC;AAExCO,EAAAA,OAAO,EAAE;AACPC,IAAAA,EAAE,EAAEL,MAAM,EADH;AAEPE,IAAAA;AAFO;AAF+B,CAAnB,CAAhB;AAQP,OAAO,MAAMI,UAAU,GAAGX,YAAY,CAACG,WAAD,CAAZ,EAAnB;AAEP,OAAO,MAAMS,UAAU,GAAGZ,YAAY,CAACI,WAAD,CAAZ,EAAnB;AAEP,MAAMS,OAAO,GAAG;AACdP,EAAAA,OADc;AAEdK,EAAAA,UAFc;AAGdC,EAAAA;AAHc,CAAhB;AAeA,MAAME,YAAuB,GAAG,EAAhC;AAEA,MAAMC,KAAK,GAAGd,aAAa,CAAyBa,YAAzB,EAAuC;AAChE,GAACZ,QAAD,GAAY,CAACc,KAAD,EAAQC,MAAR,KACVD,KAAK,CAACE,MAAN,CAAa,EACX,GAAGD,MAAM,CAACR,OADC;AAEXU,IAAAA,IAAI,EAAE;AAFK,GAAb,CAF8D;AAMhE,GAAChB,WAAD,GAAe,CAACa,KAAD,EAAQC,MAAR,KACbD,KAAK,CAACI,GAAN,CAAWC,IAAD,IACRA,IAAI,CAACX,EAAL,KAAYO,MAAM,CAACR,OAAnB,GAA6B,EAAE,GAAGY,IAAL;AAAWF,IAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AAAvB,GAA7B,GAA6DE,IAD/D,CAP8D;AAUhE,GAACjB,WAAD,GAAe,CAACY,KAAD,EAAQC,MAAR,KACbD,KAAK,CAACM,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYO,MAAM,CAACR,OAA1C;AAX8D,CAAvC,CAA3B,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeM,KAAf","sourcesContent":["import { ActionType, createAction, createReducer } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\" as const;\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\n\nlet nextId = 1;\n\nexport const addTodo = (text: string) => ({\n  type: ADD_TODO,\n  payload: {\n    id: nextId++,\n    text,\n  },\n});\n\nexport const toggleTodo = createAction(TOGGLE_TODO)<number>();\n\nexport const removeTodo = createAction(REMOVE_TODO)<number>();\n\nconst actions = {\n  addTodo,\n  toggleTodo,\n  removeTodo,\n};\ntype TodosAction = ActionType<typeof actions>;\n\nexport type Todo = {\n  id: number;\n  text: string;\n  done: boolean;\n};\n\ntype TodoState = Todo[];\n\nconst initialState: TodoState = [];\n\nconst todos = createReducer<TodoState, TodosAction>(initialState, {\n  [ADD_TODO]: (state, action) =>\n    state.concat({\n      ...action.payload,\n      done: false,\n    }),\n  [TOGGLE_TODO]: (state, action) =>\n    state.map((todo) =>\n      todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n    ),\n  [REMOVE_TODO]: (state, action) =>\n    state.filter((todo) => todo.id !== action.payload),\n});\n\n// function todos(\n//   state: TodoState = initialState,\n//   action: TodosAction\n// ): TodoState {\n//   switch (action.type) {\n//     case ADD_TODO:\n//       return state.concat({\n//         id: action.payload.id,\n//         text: action.payload.text,\n//         done: false,\n//       });\n//     case TOGGLE_TODO:\n//       return state.map((todo) =>\n//         todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n//       );\n//     case REMOVE_TODO:\n//       return state.filter((todo) => todo.id !== action.payload);\n//     default:\n//       return state;\n//   }\n// }\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}