{"ast":null,"code":"import { createAction } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\";\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\nlet nextId = 1;\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  payload: {\n    id: nextId++,\n    text\n  }\n});\nexport const toggleTodo = createAction(TOGGLE_TODO)();\nexport const removeTodo = createAction(REMOVE_TODO)();\nconst initialState = [];\n\nfunction todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat({\n        id: action.payload.id,\n        text: action.payload.text,\n        done: false\n      });\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case REMOVE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/todos.ts"],"names":["createAction","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","nextId","addTodo","text","type","payload","id","toggleTodo","removeTodo","initialState","todos","state","action","concat","done","map","todo","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,mBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAmB;AACxCC,EAAAA,IAAI,EAAEN,QADkC;AAExCO,EAAAA,OAAO,EAAE;AACPC,IAAAA,EAAE,EAAEL,MAAM,EADH;AAEPE,IAAAA;AAFO;AAF+B,CAAnB,CAAhB;AAQP,OAAO,MAAMI,UAAU,GAAGV,YAAY,CAACE,WAAD,CAAZ,EAAnB;AAEP,OAAO,MAAMS,UAAU,GAAGX,YAAY,CAACG,WAAD,CAAZ,EAAnB;AAeP,MAAMS,YAAuB,GAAG,EAAhC;;AAEA,SAASC,KAAT,GAGa;AAAA,MAFXC,KAEW,uEAFQF,YAER;AAAA,MADXG,MACW;;AACX,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKN,QAAL;AACE,aAAOa,KAAK,CAACE,MAAN,CAAa;AAClBP,QAAAA,EAAE,EAAEM,MAAM,CAACP,OAAP,CAAeC,EADD;AAElBH,QAAAA,IAAI,EAAES,MAAM,CAACP,OAAP,CAAeF,IAFH;AAGlBW,QAAAA,IAAI,EAAE;AAHY,OAAb,CAAP;;AAKF,SAAKf,WAAL;AACE,aAAOY,KAAK,CAACI,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACV,EAAL,KAAYM,MAAM,CAACP,OAAnB,GAA6B,EAAE,GAAGW,IAAL;AAAWF,QAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AAAvB,OAA7B,GAA6DE,IADxD,CAAP;;AAGF,SAAKhB,WAAL;AACE,aAAOW,KAAK,CAACM,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYM,MAAM,CAACP,OAA1C,CAAP;;AACF;AACE,aAAOM,KAAP;AAdJ;AAgBD;;AAED,eAAeD,KAAf","sourcesContent":["import { createAction } from \"typesafe-actions\";\nconst ADD_TODO = \"todos/ADD_TODO\" as const;\nconst TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nconst REMOVE_TODO = \"todos/REMOVE_TODO\";\n\nlet nextId = 1;\n\nexport const addTodo = (text: string) => ({\n  type: ADD_TODO,\n  payload: {\n    id: nextId++,\n    text,\n  },\n});\n\nexport const toggleTodo = createAction(TOGGLE_TODO)<number>();\n\nexport const removeTodo = createAction(REMOVE_TODO)<number>();\n\ntype TodosAction =\n  | ReturnType<typeof addTodo>\n  | ReturnType<typeof toggleTodo>\n  | ReturnType<typeof removeTodo>;\n\nexport type Todo = {\n  id: number;\n  text: string;\n  done: boolean;\n};\n\ntype TodoState = Todo[];\n\nconst initialState: TodoState = [];\n\nfunction todos(\n  state: TodoState = initialState,\n  action: TodosAction\n): TodoState {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat({\n        id: action.payload.id,\n        text: action.payload.text,\n        done: false,\n      });\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n      );\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.payload);\n    default:\n      return state;\n  }\n}\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}