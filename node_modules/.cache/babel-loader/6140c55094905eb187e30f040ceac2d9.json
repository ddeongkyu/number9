{"ast":null,"code":"import { getType } from \"typesafe-actions\";\nexport const asyncState = {\n  initial: initialData => ({\n    loading: false,\n    data: initialData || null,\n    error: null\n  }),\n  load: data => ({\n    loading: true,\n    data: data || null,\n    error: null\n  }),\n  success: data => ({\n    loading: false,\n    data,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    data: null,\n    error\n  })\n};\nexport function createAsyncReducer(asyncActionCreator, key) {\n  return (state, action) => {\n    const [request, success, failure] = [asyncActionCreator.request, asyncActionCreator.success, asyncActionCreator.failure].map(getType);\n\n    switch (action.type) {\n      case request:\n        return { ...state,\n          [key]: asyncState.load()\n        };\n\n      case success:\n        return { ...state,\n          [key]: asyncState.success(action.payload)\n        };\n\n      case failure:\n        return { ...state,\n          [key]: asyncState.error(action.payload)\n        };\n\n      default:\n        return state;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/lib/reducerUtils.ts"],"names":["getType","asyncState","initial","initialData","loading","data","error","load","success","createAsyncReducer","asyncActionCreator","key","state","action","request","failure","map","type","payload"],"mappings":"AACA,SAAqCA,OAArC,QAAoD,kBAApD;AAQA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,OAAO,EAASC,WAAP,KAA8C;AACrDC,IAAAA,OAAO,EAAE,KAD4C;AAErDC,IAAAA,IAAI,EAAEF,WAAW,IAAI,IAFgC;AAGrDG,IAAAA,KAAK,EAAE;AAH8C,GAA9C,CADe;AAMxBC,EAAAA,IAAI,EAASF,IAAP,KAA8C;AAClDD,IAAAA,OAAO,EAAE,IADyC;AAElDC,IAAAA,IAAI,EAAEA,IAAI,IAAI,IAFoC;AAGlDC,IAAAA,KAAK,EAAE;AAH2C,GAA9C,CANkB;AAWxBE,EAAAA,OAAO,EAASH,IAAP,KAAsC;AAC7CD,IAAAA,OAAO,EAAE,KADoC;AAE7CC,IAAAA,IAF6C;AAG7CC,IAAAA,KAAK,EAAE;AAHsC,GAAtC,CAXe;AAgBxBA,EAAAA,KAAK,EAASA,KAAP,KAAuC;AAC5CF,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA;AAH4C,GAAvC;AAhBiB,CAAnB;AAuBP,OAAO,SAASG,kBAAT,CAILC,kBAJK,EAImBC,GAJnB,EAI2B;AAChC,SAAO,CAACC,KAAD,EAAWC,MAAX,KAAiC;AACtC,UAAM,CAACC,OAAD,EAAUN,OAAV,EAAmBO,OAAnB,IAA8B,CAClCL,kBAAkB,CAACI,OADe,EAElCJ,kBAAkB,CAACF,OAFe,EAGlCE,kBAAkB,CAACK,OAHe,EAIlCC,GAJkC,CAI9BhB,OAJ8B,CAApC;;AAMA,YAAQa,MAAM,CAACI,IAAf;AACE,WAAKH,OAAL;AACE,eAAO,EACL,GAAGF,KADE;AAEL,WAACD,GAAD,GAAOV,UAAU,CAACM,IAAX;AAFF,SAAP;;AAIF,WAAKC,OAAL;AACE,eAAO,EACL,GAAGI,KADE;AAEL,WAACD,GAAD,GAAOV,UAAU,CAACO,OAAX,CAAmBK,MAAM,CAACK,OAA1B;AAFF,SAAP;;AAIF,WAAKH,OAAL;AACE,eAAO,EACL,GAAGH,KADE;AAEL,WAACD,GAAD,GAAOV,UAAU,CAACK,KAAX,CAAiBO,MAAM,CAACK,OAAxB;AAFF,SAAP;;AAIF;AACE,eAAON,KAAP;AAjBJ;AAmBD,GA1BD;AA2BD","sourcesContent":["import { AnyAction } from \"redux\";\nimport { Action, AsyncActionCreator, getType } from \"typesafe-actions\";\n\nexport type AsyncState<T, E = any> = {\n  loading: boolean;\n  data: T | null;\n  error: E | null;\n};\n\nexport const asyncState = {\n  initial: <T, E>(initialData?: T): AsyncState<T, E> => ({\n    loading: false,\n    data: initialData || null,\n    error: null,\n  }),\n  load: <T, E>(data?: T | null): AsyncState<T, E> => ({\n    loading: true,\n    data: data || null,\n    error: null,\n  }),\n  success: <T, E>(data: T): AsyncState<T, E> => ({\n    loading: false,\n    data,\n    error: null,\n  }),\n  error: <T, E>(error: E): AsyncState<T, E> => ({\n    loading: false,\n    data: null,\n    error,\n  }),\n};\ntype AnyAsyncActionCreator = AsyncActionCreator<any, any, any>;\nexport function createAsyncReducer<\n  S,\n  AC extends AnyAsyncActionCreator,\n  K extends keyof S\n>(asyncActionCreator: AC, key: K) {\n  return (state: S, action: AnyAction) => {\n    const [request, success, failure] = [\n      asyncActionCreator.request,\n      asyncActionCreator.success,\n      asyncActionCreator.failure,\n    ].map(getType);\n\n    switch (action.type) {\n      case request:\n        return {\n          ...state,\n          [key]: asyncState.load(),\n        };\n      case success:\n        return {\n          ...state,\n          [key]: asyncState.success(action.payload),\n        };\n      case failure:\n        return {\n          ...state,\n          [key]: asyncState.error(action.payload),\n        };\n      default:\n        return state;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}