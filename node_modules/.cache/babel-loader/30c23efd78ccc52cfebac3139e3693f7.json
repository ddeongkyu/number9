{"ast":null,"code":"import { createReducer } from \"typesafe-actions\";\nimport { asyncState, createAsyncReducer } from \"../../lib/reducerUtils\";\nimport { getUserProfileAsync } from \"./actions\";\nconst initialState = {\n  userProfile: asyncState.initial()\n};\nconst github = createReducer(initialState).handleAction([getUserProfileAsync.request, getUserProfileAsync.success, getUserProfileAsync.failure], createAsyncReducer(getUserProfileAsync, \"userProfile\")); // [GET_USER_PROFILE]: (state) => ({\n//   ...state,\n//   userProfile: asyncState.load(),\n// }),\n// [GET_USER_PROFILE_SUCCESS]: (state, action) => ({\n//   ...state,\n//   userProfile: asyncState.success(action.payload),\n// }),\n// [GET_USER_PROFILE_ERROR]: (state, action) => ({\n//   ...state,\n//   userProfile: asyncState.error(action.payload),\n// }),\n\nexport default github;","map":{"version":3,"sources":["/Users/hongseong-gyu/ts-react-redux-tutorial/src/Modules/github/reducer.ts"],"names":["createReducer","asyncState","createAsyncReducer","getUserProfileAsync","initialState","userProfile","initial","github","handleAction","request","success","failure"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,wBAA/C;AACA,SAASC,mBAAT,QAAoC,WAApC;AAGA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,WAAW,EAAEJ,UAAU,CAACK,OAAX;AADmB,CAAlC;AAGA,MAAMC,MAAM,GAAGP,aAAa,CAC1BI,YAD0B,CAAb,CAEbI,YAFa,CAGb,CACEL,mBAAmB,CAACM,OADtB,EAEEN,mBAAmB,CAACO,OAFtB,EAGEP,mBAAmB,CAACQ,OAHtB,CAHa,EAQbT,kBAAkB,CAACC,mBAAD,EAAsB,aAAtB,CARL,CAAf,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeI,MAAf","sourcesContent":["import { createReducer } from \"typesafe-actions\";\nimport { asyncState, createAsyncReducer } from \"../../lib/reducerUtils\";\nimport { getUserProfileAsync } from \"./actions\";\nimport { GithubAction, GithubState } from \"./types\";\n\nconst initialState: GithubState = {\n  userProfile: asyncState.initial(),\n};\nconst github = createReducer<GithubState, GithubAction>(\n  initialState\n).handleAction(\n  [\n    getUserProfileAsync.request,\n    getUserProfileAsync.success,\n    getUserProfileAsync.failure,\n  ],\n  createAsyncReducer(getUserProfileAsync, \"userProfile\")\n);\n// [GET_USER_PROFILE]: (state) => ({\n//   ...state,\n//   userProfile: asyncState.load(),\n// }),\n// [GET_USER_PROFILE_SUCCESS]: (state, action) => ({\n//   ...state,\n//   userProfile: asyncState.success(action.payload),\n// }),\n// [GET_USER_PROFILE_ERROR]: (state, action) => ({\n//   ...state,\n//   userProfile: asyncState.error(action.payload),\n// }),\n\nexport default github;\n"]},"metadata":{},"sourceType":"module"}